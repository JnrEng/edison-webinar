<xml xmlns="http://www.w3.org/1999/xhtml">
  <variables>
    <variable type="" id="tBza-zFwgw`3]X?Sz3AI">leftOrRight</variable>
  </variables>
  <block type="event_Start" id="}A_v`14$6amsK;Jm!`00" deletable="false" movable="false" x="336" y="108">
    <next>
      <block type="sensing_TurnObstacleBeam" id="qWX3iWSE09:aFNzN?rGs">
        <field name="SWITCH">ON</field>
        <next>
          <block type="control_forever" id="onlgjU!@}yK=g3=LsvE0">
            <statement name="SUBSTACK">
              <block type="control_if_else" id="ca@u`(9uUC~;l_uymSBM">
                <value name="CONDITION">
                  <block type="sensing_Obstacle" id="bs5M?1.E@!eP*l+^ajEc">
                    <field name="OBS">AHEAD</field>
                  </block>
                </value>
                <statement name="SUBSTACK">
                  <block type="sound_beep" id="Wc}11_*6,h]iPY^#s1RQ">
                    <next>
                      <block type="drive_stop" id="yC?yf]SM1k`2kfkPA5}I">
                        <field name="MOTOR">LeftRight</field>
                        <next>
                          <block type="data_setvariableto" id="dGXWWOgHi8yW`3WULPs+">
                            <value name="VARIABLE">
                              <block type="data_variable" id="b/mqeh?s#.7lvEO%Hj=n">
                                <field name="VARIABLE" id="tBza-zFwgw`3]X?Sz3AI" variabletype="">leftOrRight</field>
                              </block>
                            </value>
                            <value name="VALUE">
                              <shadow type="math_integer" id="uNMnZ[t2GX74?oC)Boiy">
                                <field name="NUM">1</field>
                              </shadow>
                              <block type="operator_random" id="++-oYQQ8DEjri3OWvb`h">
                                <value name="TO">
                                  <shadow type="math_whole_number" id="w4NkDjS/u/fM;SnwYcqA">
                                    <field name="NUM">4</field>
                                  </shadow>
                                </value>
                              </block>
                            </value>
                            <next>
                              <block type="control_if_else" id="dVsE{*WUP44qjDSmZiy5">
                                <value name="CONDITION">
                                  <block type="operator_equals" id="~I|-;68O}{qt7eX$D{^V">
                                    <value name="OPERAND1">
                                      <shadow type="math_integer" id="]}qC/c`rW_Dwr].-*c_E">
                                        <field name="NUM"></field>
                                      </shadow>
                                      <block type="data_variable" id="i{;FmcdfW-5A~S#i*g{d">
                                        <field name="VARIABLE" id="tBza-zFwgw`3]X?Sz3AI" variabletype="">leftOrRight</field>
                                      </block>
                                    </value>
                                    <value name="OPERAND2">
                                      <shadow type="math_integer" id=".hUmBJLEC+fiR+IfLdq/">
                                        <field name="NUM">2</field>
                                      </shadow>
                                    </value>
                                  </block>
                                </value>
                                <statement name="SUBSTACK">
                                  <block type="drive_left_distance" id="JNade-I$*C6,Rkna4fd`">
                                    <field name="DIRECTION">SPIN</field>
                                    <field name="UNITS">DEGREES</field>
                                    <field name="SPEED">5</field>
                                    <value name="DISTANCE">
                                      <shadow type="math_positive_number" id="N^AE|E@F^S^HryMGkyIX">
                                        <field name="NUM">90</field>
                                      </shadow>
                                    </value>
                                  </block>
                                </statement>
                                <statement name="SUBSTACK2">
                                  <block type="drive_right_distance" id="yUqpxS`RkDTP/(hQ]i57">
                                    <field name="DIRECTION">SPIN</field>
                                    <field name="UNITS">DEGREES</field>
                                    <field name="SPEED">5</field>
                                    <value name="DISTANCE">
                                      <shadow type="math_positive_number" id="/arAg1_VlP(9;d512DMA">
                                        <field name="NUM">90</field>
                                      </shadow>
                                    </value>
                                  </block>
                                </statement>
                              </block>
                            </next>
                          </block>
                        </next>
                      </block>
                    </next>
                  </block>
                </statement>
                <statement name="SUBSTACK2">
                  <block type="drive_set_both_motors" id="|JC=p7L$^e.:xdP|[,93">
                    <field name="DIRECTION">FORWARD</field>
                    <field name="SPEED">5</field>
                  </block>
                </statement>
              </block>
            </statement>
          </block>
        </next>
      </block>
    </next>
  </block>
</xml>